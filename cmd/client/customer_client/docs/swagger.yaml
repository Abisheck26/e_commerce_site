basePath: /api/v1
definitions:
  customer_controller.Address:
    properties:
      city:
        type: string
      country:
        type: string
      state:
        type: string
      street1:
        type: string
      street2:
        type: string
      zip:
        type: string
    type: object
  customer_controller.Customer:
    properties:
      address:
        items:
          $ref: '#/definitions/customer_controller.Address'
        type: array
      customerid:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      shippingaddress:
        items:
          $ref: '#/definitions/customer_controller.ShippingAddress'
        type: array
    type: object
  customer_controller.DeleteResponse:
    properties:
      message:
        type: string
    type: object
  customer_controller.GetByCustomerIdResponse:
    properties:
      customerid:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      message:
        type: string
    type: object
  customer_controller.ShippingAddress:
    properties:
      city:
        type: string
      state:
        type: string
      street1:
        type: string
      street2:
        type: string
    type: object
  customer_controller.Token:
    properties:
      token:
        type: string
    type: object
  customer_controller.UpdatePassword:
    properties:
      email:
        type: string
      newpassword:
        type: string
      oldpassword:
        type: string
    type: object
  customer_controller.UpdateRequest:
    properties:
      field:
        type: string
      newvalue:
        type: string
      oldvalue:
        type: string
    type: object
  customer_controller.UpdateResponse:
    properties:
      message:
        type: string
    type: object
  customer_controller.User:
    properties:
      customerid:
        type: string
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rohith.s@netxd.com
    name: INVENTORY
    url: http://localhost:8083/swagger/index.html#/
  description: Buy Anything In Our Webstite
  title: Documenting API (E-Commerce Webstie)
  version: "1"
paths:
  /users/delete:
    post:
      consumes:
      - application/json
      description: Delete
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer_controller.DeleteResponse'
      security:
      - bearerToken: []
      summary: return Deleted Message
      tags:
      - Users
  /users/getbyid:
    get:
      description: Get user details by ID
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer_controller.GetByCustomerIdResponse'
      security:
      - bearerToken: []
      summary: Get User by ID
      tags:
      - Users
  /users/reset:
    post:
      consumes:
      - application/json
      description: reset
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/customer_controller.UpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer_controller.UpdatePassword'
      summary: return Updated Password
      tags:
      - Users
  /users/signin:
    post:
      description: signin and return user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/customer_controller.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer_controller.Token'
      summary: return Signin user
      tags:
      - Users
  /users/signup:
    post:
      consumes:
      - application/json
      description: signup
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/customer_controller.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer_controller.Customer'
      summary: return created user
      tags:
      - Users
  /users/update:
    post:
      consumes:
      - application/json
      description: Update and return user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/customer_controller.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer_controller.UpdateResponse'
      security:
      - bearerToken: []
      summary: Update User
      tags:
      - Users
securityDefinitions:
  bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
